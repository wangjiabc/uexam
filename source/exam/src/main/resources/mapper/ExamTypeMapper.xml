<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alvis.exam.repository.ExamTypeMapper">
  <resultMap id="BaseResultMap" type="com.alvis.exam.domain.ExamType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="paper_type" jdbcType="VARCHAR" property="paperType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, paper_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_exam_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_exam_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alvis.exam.domain.ExamType">
    insert into t_exam_type (id, paper_type)
    values (#{id,jdbcType=INTEGER}, #{paperType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.alvis.exam.domain.ExamType">
    insert into t_exam_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paperType != null">
        paper_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paperType != null">
        #{paperType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alvis.exam.domain.ExamType">
    update t_exam_type
    <set>
      <if test="paperType != null">
        paper_type = #{paperType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alvis.exam.domain.ExamType">
    update t_exam_type
    set paper_type = #{paperType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  ======分割====================-->
  <select id="findExamTypeIdByName" parameterType="java.lang.String" resultType="java.lang.Integer">
    select
    id
    from t_exam_type
    where paper_type = #{examTypeName,jdbcType=INTEGER}
  </select>

  <select id="findAll"  resultType="com.alvis.exam.domain.ExamType">
    select
    id,paper_type paperType
    from t_exam_type
  </select>

  <select id="findNameByExamTypeId" parameterType="java.lang.Integer" resultType="com.alvis.exam.domain.ExamType">
    select
    id,paper_type paperType
    from t_exam_type
    where id = #{examTypeId,jdbcType=INTEGER}
  </select>
    <select id="queryExamType" resultType="com.alvis.exam.domain.ExamType">
    select id,paper_type as paperType from t_exam_type
  </select>
</mapper>