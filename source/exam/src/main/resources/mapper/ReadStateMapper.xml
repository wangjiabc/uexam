<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alvis.exam.repository.ReadStateMapper">
  <resultMap id="BaseResultMap" type="com.alvis.exam.domain.ReadState">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="read_time" jdbcType="INTEGER" property="readTime" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, article_id, read_time, count, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_read_state
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_read_state
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alvis.exam.domain.ReadState">
    insert into t_read_state (id, article_id, read_time, 
      count, user_id)
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{readTime,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alvis.exam.domain.ReadState">
    insert into t_read_state
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        #{readTime,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alvis.exam.domain.ReadState">
    update t_read_state
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        read_time = #{readTime,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alvis.exam.domain.ReadState">
    update t_read_state
    set article_id = #{articleId,jdbcType=INTEGER},
      read_time = #{readTime,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUseId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from t_read_state
    where user_id = #{useId,jdbcType=INTEGER}
  </select>

</mapper>