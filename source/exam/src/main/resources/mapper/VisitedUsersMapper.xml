<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alvis.exam.repository.VisitedUsersMapper">
  <resultMap id="BaseResultMap" type="com.alvis.exam.domain.VisitedUsers">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="visit_start_date" jdbcType="TIMESTAMP" property="visitStartDate" />
    <result column="visit_end_date" jdbcType="TIMESTAMP" property="visitEndDate" />
    <result column="users_id" jdbcType="INTEGER" property="usersId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="license" jdbcType="VARCHAR" property="license" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="time" jdbcType="INTEGER" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, visit_start_date, visit_end_date, users_id, position_id, license, user_id, time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from visited_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from visited_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.alvis.exam.domain.VisitedUsers">
    insert into visited_users (id, visit_start_date, visit_end_date,
      users_id, position_id, license,
      user_id, time)
    values (#{id,jdbcType=INTEGER}, #{visitStartDate,jdbcType=TIMESTAMP}, #{visitEndDate,jdbcType=TIMESTAMP},
      #{usersId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, #{license,jdbcType=VARCHAR},
      #{userId,jdbcType=INTEGER}, #{time,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.alvis.exam.domain.VisitedUsers">
    insert into visited_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="visitStartDate != null">
        visit_start_date,
      </if>
      <if test="visitEndDate != null">
        visit_end_date,
      </if>
      <if test="usersId != null">
        users_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="license != null">
        license,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="visitStartDate != null">
        #{visitStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="visitEndDate != null">
        #{visitEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="usersId != null">
        #{usersId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="license != null">
        #{license,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.alvis.exam.domain.VisitedUsers">
    update visited_users
    <set>
      <if test="visitStartDate != null">
        visit_start_date = #{visitStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="visitEndDate != null">
        visit_end_date = #{visitEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="usersId != null">
        users_id = #{usersId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="license != null">
        license = #{license,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.alvis.exam.domain.VisitedUsers">
    update visited_users
    set visit_start_date = #{visitStartDate,jdbcType=TIMESTAMP},
      visit_end_date = #{visitEndDate,jdbcType=TIMESTAMP},
      users_id = #{usersId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      license = #{license,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      time = #{time,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByVisitedUsers" parameterType="com.alvis.exam.domain.VisitedUsers">
    update visited_users
    <set>
      <if test="visitStartDate != null">
        visit_start_date = #{visitStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="visitEndDate != null">
        visit_end_date = #{visitEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="usersId != null">
        users_id = #{usersId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="license != null">
        license = #{license,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findTime" parameterType="com.alvis.exam.domain.VisitedUsers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from visited_users
    where users_id = #{usersId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </select>



  <select id="findMaxTime" parameterType="com.alvis.exam.domain.VisitedUsers" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM visited_users
    where time =
        (SELECT MAX(time) FROM visited_users where user_id = #{userId,jdbcType=INTEGER}
        AND users_id = #{usersId,jdbcType=INTEGER} )
        and user_id = #{userId,jdbcType=INTEGER}
        AND users_id = #{usersId,jdbcType=INTEGER}
  </select>


  <select id="findUsersId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT users_id FROM visited_users WHERE user_id = #{userId,jdbcType=INTEGER}
    <if test="visitEndDate != null">
      and visit_end_date &lt; #{visitEndDate,jdbcType=TIMESTAMP}
    </if>
    <if test="visitStartDate != null">
    and visit_end_date &gt; #{visitStartDate,jdbcType=TIMESTAMP}
    </if>
    GROUP BY users_id
  </select>

</mapper>


